# App server config for register SSL (Certbot)
server {
  listen      80;
  server_name .university-prod.skc.today;

  # Allow only for register SSL (Certbot)
  location ^~ /.well-known/acme-challenge { root /var/www/certbot; }

  location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }


  # Redirect to HTTPS
  location / { return 301 https://university-prod.skc.today$request_uri; }
}

server {

        listen 443 ssl; #ssl http2;
        listen [::]:443 ssl; #ssl http2;
        server_name .university-prod.skc.today;
        # SSL
        ssl_certificate /etc/letsencrypt/live/university-prod.skc.today/fullchain1.pem;
        ssl_certificate_key /etc/letsencrypt/live/university-prod.skc.today/privkey2.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/university-prod.skc.today/chain1.pem;

        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /var/www/certbot;
        }
     
        
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # logging
        access_log /var/log/nginx/university-prod.skc.today.access.log;
        error_log /var/log/nginx/university-prod.skc.today.error.log warn;
 
#        upstream frontend {
#           server 192.168.60.10:3002; 
#        }

#        upstream backend {
#           server 192.168.60.10:3000;
#        }


        # reverse proxy
 
       location / {
            proxy_pass http://frontend;
#             proxy_pass http://localhost:3002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_read_timeout 86400;

#            proxy_http_version 1.1;
#            proxy_cache_bypass $http_upgrade;
#            proxy_set_header Connection 'upgrade';
#            proxy_set_header Upgrade $http_upgrade;
       }

       location /api/ {
            proxy_pass http://backend;
            #proxy_pass http://127.0.0.1:3000;

#            proxy_http_version 1.1;
#            proxy_cache_bypass $http_upgrade;
#            proxy_set_header Connection 'upgrade';
#            proxy_set_header Upgrade $http_upgrade;
       }
}

